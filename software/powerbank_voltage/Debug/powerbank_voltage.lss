
powerbank_voltage.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000019e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000212  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000212  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000212  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000244  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000765  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000429  00000000  00000000  00000a5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000417  00000000  00000000  00000e86  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  000012a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000324  00000000  00000000  00001374  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000280  00000000  00000000  00001698  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00001918  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	16 c0       	rjmp	.+44     	; 0x30 <__bad_interrupt>
   4:	15 c0       	rjmp	.+42     	; 0x30 <__bad_interrupt>
   6:	14 c0       	rjmp	.+40     	; 0x30 <__bad_interrupt>
   8:	13 c0       	rjmp	.+38     	; 0x30 <__bad_interrupt>
   a:	12 c0       	rjmp	.+36     	; 0x30 <__bad_interrupt>
   c:	11 c0       	rjmp	.+34     	; 0x30 <__bad_interrupt>
   e:	10 c0       	rjmp	.+32     	; 0x30 <__bad_interrupt>
  10:	0f c0       	rjmp	.+30     	; 0x30 <__bad_interrupt>
  12:	0e c0       	rjmp	.+28     	; 0x30 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61

0000001c <__do_clear_bss>:
  1c:	20 e0       	ldi	r18, 0x00	; 0
  1e:	a0 e6       	ldi	r26, 0x60	; 96
  20:	b0 e0       	ldi	r27, 0x00	; 0
  22:	01 c0       	rjmp	.+2      	; 0x26 <.do_clear_bss_start>

00000024 <.do_clear_bss_loop>:
  24:	1d 92       	st	X+, r1

00000026 <.do_clear_bss_start>:
  26:	a1 36       	cpi	r26, 0x61	; 97
  28:	b2 07       	cpc	r27, r18
  2a:	e1 f7       	brne	.-8      	; 0x24 <.do_clear_bss_loop>
  2c:	6d d0       	rcall	.+218    	; 0x108 <main>
  2e:	b5 c0       	rjmp	.+362    	; 0x19a <_exit>

00000030 <__bad_interrupt>:
  30:	e7 cf       	rjmp	.-50     	; 0x0 <__vectors>

00000032 <dp600mV>:
	DDRB |= DM;
}

void dp0mV() {
	PORTB &= ~DP;
	DDRB |= DP;
  32:	b9 98       	cbi	0x17, 1	; 23
  34:	08 95       	ret

00000036 <dp3300mV>:
  36:	c1 9a       	sbi	0x18, 1	; 24
  38:	b9 9a       	sbi	0x17, 1	; 23
  3a:	08 95       	ret

0000003c <dm600mV>:
  3c:	b8 98       	cbi	0x17, 0	; 23
  3e:	08 95       	ret

00000040 <dm0mV>:
  40:	c0 98       	cbi	0x18, 0	; 24
  42:	b8 9a       	sbi	0x17, 0	; 23
  44:	08 95       	ret

00000046 <begin>:
}

void begin() {
	dp600mV();
  46:	f5 df       	rcall	.-22     	; 0x32 <dp600mV>
	dm600mV();
  48:	f9 df       	rcall	.-14     	; 0x3c <dm600mV>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  4a:	2f e3       	ldi	r18, 0x3F	; 63
  4c:	8e e7       	ldi	r24, 0x7E	; 126
  4e:	95 e0       	ldi	r25, 0x05	; 5
  50:	21 50       	subi	r18, 0x01	; 1
  52:	80 40       	sbci	r24, 0x00	; 0
  54:	90 40       	sbci	r25, 0x00	; 0
  56:	e1 f7       	brne	.-8      	; 0x50 <begin+0xa>
  58:	00 c0       	rjmp	.+0      	; 0x5a <begin+0x14>
  5a:	00 00       	nop
	_delay_ms(1500);
	dm0mV();
  5c:	f1 df       	rcall	.-30     	; 0x40 <dm0mV>
  5e:	2f e3       	ldi	r18, 0x3F	; 63
  60:	8e e7       	ldi	r24, 0x7E	; 126
  62:	95 e0       	ldi	r25, 0x05	; 5
  64:	21 50       	subi	r18, 0x01	; 1
  66:	80 40       	sbci	r24, 0x00	; 0
  68:	90 40       	sbci	r25, 0x00	; 0
  6a:	e1 f7       	brne	.-8      	; 0x64 <begin+0x1e>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <begin+0x28>
  6e:	00 00       	nop
  70:	08 95       	ret

00000072 <blink>:
	_delay_ms(1500);
	LED_OFF;
}

void blink(uint8_t amount) {
	for (uint8_t i=0; i< amount; i++) {
  72:	88 23       	and	r24, r24
  74:	91 f0       	breq	.+36     	; 0x9a <blink+0x28>
  76:	90 e0       	ldi	r25, 0x00	; 0
		LED_ON;
  78:	c2 9a       	sbi	0x18, 2	; 24
  7a:	ef e2       	ldi	r30, 0x2F	; 47
  7c:	f5 e7       	ldi	r31, 0x75	; 117
  7e:	31 97       	sbiw	r30, 0x01	; 1
  80:	f1 f7       	brne	.-4      	; 0x7e <blink+0xc>
  82:	00 c0       	rjmp	.+0      	; 0x84 <blink+0x12>
  84:	00 00       	nop
		_delay_ms(100);
		LED_OFF;
  86:	c2 98       	cbi	0x18, 2	; 24
  88:	ef e2       	ldi	r30, 0x2F	; 47
  8a:	f5 e7       	ldi	r31, 0x75	; 117
  8c:	31 97       	sbiw	r30, 0x01	; 1
  8e:	f1 f7       	brne	.-4      	; 0x8c <blink+0x1a>
  90:	00 c0       	rjmp	.+0      	; 0x92 <blink+0x20>
  92:	00 00       	nop
	_delay_ms(1500);
	LED_OFF;
}

void blink(uint8_t amount) {
	for (uint8_t i=0; i< amount; i++) {
  94:	9f 5f       	subi	r25, 0xFF	; 255
  96:	89 13       	cpse	r24, r25
  98:	ef cf       	rjmp	.-34     	; 0x78 <blink+0x6>
  9a:	8f e5       	ldi	r24, 0x5F	; 95
  9c:	9a ee       	ldi	r25, 0xEA	; 234
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <blink+0x2c>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <__stack+0x5>
  a4:	00 00       	nop
  a6:	08 95       	ret

000000a8 <set12V>:
	dm0mV();
	_delay_ms(1500);
}

void set12V() {
	dp600mV();
  a8:	c4 df       	rcall	.-120    	; 0x32 <dp600mV>
	dm600mV();
  aa:	c8 df       	rcall	.-112    	; 0x3c <dm600mV>
	blink(3);
  ac:	83 e0       	ldi	r24, 0x03	; 3
  ae:	e1 df       	rcall	.-62     	; 0x72 <blink>
	LED_ON;
  b0:	c2 9a       	sbi	0x18, 2	; 24
  b2:	2f e3       	ldi	r18, 0x3F	; 63
  b4:	8e e7       	ldi	r24, 0x7E	; 126
  b6:	95 e0       	ldi	r25, 0x05	; 5
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	80 40       	sbci	r24, 0x00	; 0
  bc:	90 40       	sbci	r25, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <set12V+0x10>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <set12V+0x1a>
  c2:	00 00       	nop
	_delay_ms(1500);
	LED_OFF;
  c4:	c2 98       	cbi	0x18, 2	; 24
  c6:	08 95       	ret

000000c8 <set9V>:
}

void set9V() {
	dp3300mV();
  c8:	b6 df       	rcall	.-148    	; 0x36 <dp3300mV>
	dm600mV();
  ca:	b8 df       	rcall	.-144    	; 0x3c <dm600mV>
	blink(2);
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	d1 df       	rcall	.-94     	; 0x72 <blink>
	LED_ON;
  d0:	c2 9a       	sbi	0x18, 2	; 24
  d2:	2f e3       	ldi	r18, 0x3F	; 63
  d4:	8e e7       	ldi	r24, 0x7E	; 126
  d6:	95 e0       	ldi	r25, 0x05	; 5
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <set9V+0x10>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <set9V+0x1a>
  e2:	00 00       	nop
	_delay_ms(1500);
	LED_OFF;
  e4:	c2 98       	cbi	0x18, 2	; 24
  e6:	08 95       	ret

000000e8 <set5V>:
}

void set5V() {
	//dp0mV();
	dp600mV();
  e8:	a4 df       	rcall	.-184    	; 0x32 <dp600mV>
	dm0mV();
  ea:	aa df       	rcall	.-172    	; 0x40 <dm0mV>
	blink(1);
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	c1 df       	rcall	.-126    	; 0x72 <blink>
	LED_ON;
  f0:	c2 9a       	sbi	0x18, 2	; 24
  f2:	2f e3       	ldi	r18, 0x3F	; 63
  f4:	8e e7       	ldi	r24, 0x7E	; 126
  f6:	95 e0       	ldi	r25, 0x05	; 5
  f8:	21 50       	subi	r18, 0x01	; 1
  fa:	80 40       	sbci	r24, 0x00	; 0
  fc:	90 40       	sbci	r25, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <set5V+0x10>
 100:	00 c0       	rjmp	.+0      	; 0x102 <set5V+0x1a>
 102:	00 00       	nop
	_delay_ms(1500);
	LED_OFF;
 104:	c2 98       	cbi	0x18, 2	; 24
 106:	08 95       	ret

00000108 <main>:
uint8_t mode = 0;


int main(void)
{
	PORTB = BTN;
 108:	80 e1       	ldi	r24, 0x10	; 16
 10a:	88 bb       	out	0x18, r24	; 24
	DDRB = BTN | LED;
 10c:	84 e1       	ldi	r24, 0x14	; 20
 10e:	87 bb       	out	0x17, r24	; 23
	
	begin();
 110:	9a df       	rcall	.-204    	; 0x46 <begin>
	set5V();
 112:	ea df       	rcall	.-44     	; 0xe8 <set5V>
	
	while(1) {
		if (BTN_PUSHED) {
			while (BTN_PUSHED);
			mode = (mode + 1) % MODE_COUNT;
 114:	c3 e0       	ldi	r28, 0x03	; 3
 116:	d0 e0       	ldi	r29, 0x00	; 0
	
	begin();
	set5V();
	
	while(1) {
		if (BTN_PUSHED) {
 118:	b4 99       	sbic	0x16, 4	; 22
 11a:	fe cf       	rjmp	.-4      	; 0x118 <main+0x10>
			while (BTN_PUSHED);
 11c:	b4 9b       	sbis	0x16, 4	; 22
 11e:	fe cf       	rjmp	.-4      	; 0x11c <main+0x14>
			mode = (mode + 1) % MODE_COUNT;
 120:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	be 01       	movw	r22, r28
 12a:	10 d0       	rcall	.+32     	; 0x14c <__divmodhi4>
 12c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
			switch (mode) {
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	31 f0       	breq	.+12     	; 0x140 <main+0x38>
 134:	18 f0       	brcs	.+6      	; 0x13c <main+0x34>
 136:	82 30       	cpi	r24, 0x02	; 2
 138:	29 f0       	breq	.+10     	; 0x144 <main+0x3c>
 13a:	06 c0       	rjmp	.+12     	; 0x148 <main+0x40>
				case 0:
				set5V();
 13c:	d5 df       	rcall	.-86     	; 0xe8 <set5V>
				break;
 13e:	ec cf       	rjmp	.-40     	; 0x118 <main+0x10>
				case 1:
				set9V();
 140:	c3 df       	rcall	.-122    	; 0xc8 <set9V>
				break;
 142:	ea cf       	rjmp	.-44     	; 0x118 <main+0x10>
				case 2:
				set12V();
 144:	b1 df       	rcall	.-158    	; 0xa8 <set12V>
				break;
 146:	e8 cf       	rjmp	.-48     	; 0x118 <main+0x10>
				default:
				set5V();
 148:	cf df       	rcall	.-98     	; 0xe8 <set5V>
				break;
 14a:	e6 cf       	rjmp	.-52     	; 0x118 <main+0x10>

0000014c <__divmodhi4>:
 14c:	97 fb       	bst	r25, 7
 14e:	07 2e       	mov	r0, r23
 150:	16 f4       	brtc	.+4      	; 0x156 <__divmodhi4+0xa>
 152:	00 94       	com	r0
 154:	06 d0       	rcall	.+12     	; 0x162 <__divmodhi4_neg1>
 156:	77 fd       	sbrc	r23, 7
 158:	08 d0       	rcall	.+16     	; 0x16a <__divmodhi4_neg2>
 15a:	0b d0       	rcall	.+22     	; 0x172 <__udivmodhi4>
 15c:	07 fc       	sbrc	r0, 7
 15e:	05 d0       	rcall	.+10     	; 0x16a <__divmodhi4_neg2>
 160:	3e f4       	brtc	.+14     	; 0x170 <__divmodhi4_exit>

00000162 <__divmodhi4_neg1>:
 162:	90 95       	com	r25
 164:	81 95       	neg	r24
 166:	9f 4f       	sbci	r25, 0xFF	; 255
 168:	08 95       	ret

0000016a <__divmodhi4_neg2>:
 16a:	70 95       	com	r23
 16c:	61 95       	neg	r22
 16e:	7f 4f       	sbci	r23, 0xFF	; 255

00000170 <__divmodhi4_exit>:
 170:	08 95       	ret

00000172 <__udivmodhi4>:
 172:	aa 1b       	sub	r26, r26
 174:	bb 1b       	sub	r27, r27
 176:	51 e1       	ldi	r21, 0x11	; 17
 178:	07 c0       	rjmp	.+14     	; 0x188 <__udivmodhi4_ep>

0000017a <__udivmodhi4_loop>:
 17a:	aa 1f       	adc	r26, r26
 17c:	bb 1f       	adc	r27, r27
 17e:	a6 17       	cp	r26, r22
 180:	b7 07       	cpc	r27, r23
 182:	10 f0       	brcs	.+4      	; 0x188 <__udivmodhi4_ep>
 184:	a6 1b       	sub	r26, r22
 186:	b7 0b       	sbc	r27, r23

00000188 <__udivmodhi4_ep>:
 188:	88 1f       	adc	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	5a 95       	dec	r21
 18e:	a9 f7       	brne	.-22     	; 0x17a <__udivmodhi4_loop>
 190:	80 95       	com	r24
 192:	90 95       	com	r25
 194:	bc 01       	movw	r22, r24
 196:	cd 01       	movw	r24, r26
 198:	08 95       	ret

0000019a <_exit>:
 19a:	f8 94       	cli

0000019c <__stop_program>:
 19c:	ff cf       	rjmp	.-2      	; 0x19c <__stop_program>
