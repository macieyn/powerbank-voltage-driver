
powerbank_voltage.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000021e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  0000021e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000021e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000250  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  0000028c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000750  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000429  00000000  00000000  00000a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000404  00000000  00000000  00000e75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  0000127c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000032e  00000000  00000000  00001340  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000280  00000000  00000000  0000166e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000018ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	16 c0       	rjmp	.+44     	; 0x30 <__bad_interrupt>
   4:	15 c0       	rjmp	.+42     	; 0x30 <__bad_interrupt>
   6:	14 c0       	rjmp	.+40     	; 0x30 <__bad_interrupt>
   8:	13 c0       	rjmp	.+38     	; 0x30 <__bad_interrupt>
   a:	12 c0       	rjmp	.+36     	; 0x30 <__bad_interrupt>
   c:	11 c0       	rjmp	.+34     	; 0x30 <__bad_interrupt>
   e:	10 c0       	rjmp	.+32     	; 0x30 <__bad_interrupt>
  10:	0f c0       	rjmp	.+30     	; 0x30 <__bad_interrupt>
  12:	0e c0       	rjmp	.+28     	; 0x30 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61

0000001c <__do_clear_bss>:
  1c:	20 e0       	ldi	r18, 0x00	; 0
  1e:	a0 e6       	ldi	r26, 0x60	; 96
  20:	b0 e0       	ldi	r27, 0x00	; 0
  22:	01 c0       	rjmp	.+2      	; 0x26 <.do_clear_bss_start>

00000024 <.do_clear_bss_loop>:
  24:	1d 92       	st	X+, r1

00000026 <.do_clear_bss_start>:
  26:	a1 36       	cpi	r26, 0x61	; 97
  28:	b2 07       	cpc	r27, r18
  2a:	e1 f7       	brne	.-8      	; 0x24 <.do_clear_bss_loop>
  2c:	73 d0       	rcall	.+230    	; 0x114 <main>
  2e:	bb c0       	rjmp	.+374    	; 0x1a6 <_exit>

00000030 <__bad_interrupt>:
  30:	e7 cf       	rjmp	.-50     	; 0x0 <__vectors>

00000032 <dp600mV>:
	PORTB |= DM_3V | DM_GND;
}

void dm3300mV() {
	PORTB &= ~DM_GND;
	PORTB |= DM_3V;
  32:	c4 9a       	sbi	0x18, 4	; 24
  34:	08 95       	ret

00000036 <dp3300mV>:
  36:	c4 98       	cbi	0x18, 4	; 24
  38:	08 95       	ret

0000003a <dm600mV>:
  3a:	88 b3       	in	r24, 0x18	; 24
  3c:	83 60       	ori	r24, 0x03	; 3
  3e:	88 bb       	out	0x18, r24	; 24
  40:	08 95       	ret

00000042 <dm0mV>:
}

void dm0mV() {
	PORTB &= ~DM_3V;
  42:	c0 98       	cbi	0x18, 0	; 24
	PORTB |= DM_GND;
  44:	c1 9a       	sbi	0x18, 1	; 24
  46:	08 95       	ret

00000048 <begin>:
}

void begin() {
	LED_ON;
  48:	c3 9a       	sbi	0x18, 3	; 24
	dp600mV();
  4a:	f3 df       	rcall	.-26     	; 0x32 <dp600mV>
	dm600mV();
  4c:	f6 df       	rcall	.-20     	; 0x3a <dm600mV>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  4e:	2f e3       	ldi	r18, 0x3F	; 63
  50:	8e e7       	ldi	r24, 0x7E	; 126
  52:	95 e0       	ldi	r25, 0x05	; 5
  54:	21 50       	subi	r18, 0x01	; 1
  56:	80 40       	sbci	r24, 0x00	; 0
  58:	90 40       	sbci	r25, 0x00	; 0
  5a:	e1 f7       	brne	.-8      	; 0x54 <begin+0xc>
  5c:	00 c0       	rjmp	.+0      	; 0x5e <begin+0x16>
  5e:	00 00       	nop
	_delay_ms(1500);
	dm0mV();
  60:	f0 df       	rcall	.-32     	; 0x42 <dm0mV>
  62:	2f e3       	ldi	r18, 0x3F	; 63
  64:	8e e7       	ldi	r24, 0x7E	; 126
  66:	95 e0       	ldi	r25, 0x05	; 5
  68:	21 50       	subi	r18, 0x01	; 1
  6a:	80 40       	sbci	r24, 0x00	; 0
  6c:	90 40       	sbci	r25, 0x00	; 0
  6e:	e1 f7       	brne	.-8      	; 0x68 <begin+0x20>
  70:	00 c0       	rjmp	.+0      	; 0x72 <begin+0x2a>
  72:	00 00       	nop
	_delay_ms(1500);
	LED_OFF;
  74:	c3 98       	cbi	0x18, 3	; 24
  76:	08 95       	ret

00000078 <blink>:
	_delay_ms(500);
	LED_OFF;
}

void blink(uint8_t amount) {
	for (uint8_t i=0; i< amount; i++) {
  78:	88 23       	and	r24, r24
  7a:	91 f0       	breq	.+36     	; 0xa0 <__stack+0x1>
  7c:	90 e0       	ldi	r25, 0x00	; 0
		LED_ON;
  7e:	c3 9a       	sbi	0x18, 3	; 24
  80:	ef e2       	ldi	r30, 0x2F	; 47
  82:	f5 e7       	ldi	r31, 0x75	; 117
  84:	31 97       	sbiw	r30, 0x01	; 1
  86:	f1 f7       	brne	.-4      	; 0x84 <blink+0xc>
  88:	00 c0       	rjmp	.+0      	; 0x8a <blink+0x12>
  8a:	00 00       	nop
		_delay_ms(100);
		LED_OFF;
  8c:	c3 98       	cbi	0x18, 3	; 24
  8e:	ef e2       	ldi	r30, 0x2F	; 47
  90:	f5 e7       	ldi	r31, 0x75	; 117
  92:	31 97       	sbiw	r30, 0x01	; 1
  94:	f1 f7       	brne	.-4      	; 0x92 <blink+0x1a>
  96:	00 c0       	rjmp	.+0      	; 0x98 <blink+0x20>
  98:	00 00       	nop
	_delay_ms(500);
	LED_OFF;
}

void blink(uint8_t amount) {
	for (uint8_t i=0; i< amount; i++) {
  9a:	9f 5f       	subi	r25, 0xFF	; 255
  9c:	89 13       	cpse	r24, r25
  9e:	ef cf       	rjmp	.-34     	; 0x7e <blink+0x6>
  a0:	ff eb       	ldi	r31, 0xBF	; 191
  a2:	24 ed       	ldi	r18, 0xD4	; 212
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	f1 50       	subi	r31, 0x01	; 1
  a8:	20 40       	sbci	r18, 0x00	; 0
  aa:	80 40       	sbci	r24, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <__stack+0x7>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <__stack+0x11>
  b0:	00 00       	nop
  b2:	08 95       	ret

000000b4 <set12V>:
	_delay_ms(1500);
	LED_OFF;
}

void set12V() {
	dp600mV();
  b4:	be df       	rcall	.-132    	; 0x32 <dp600mV>
	dm600mV();
  b6:	c1 df       	rcall	.-126    	; 0x3a <dm600mV>
	blink(3);
  b8:	83 e0       	ldi	r24, 0x03	; 3
  ba:	de df       	rcall	.-68     	; 0x78 <blink>
	LED_ON;
  bc:	c3 9a       	sbi	0x18, 3	; 24
  be:	2f eb       	ldi	r18, 0xBF	; 191
  c0:	84 ed       	ldi	r24, 0xD4	; 212
  c2:	91 e0       	ldi	r25, 0x01	; 1
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <set12V+0x10>
  cc:	00 c0       	rjmp	.+0      	; 0xce <set12V+0x1a>
  ce:	00 00       	nop
	_delay_ms(500);
	LED_OFF;
  d0:	c3 98       	cbi	0x18, 3	; 24
  d2:	08 95       	ret

000000d4 <set9V>:
}

void set9V() {
	dp3300mV();
  d4:	b0 df       	rcall	.-160    	; 0x36 <dp3300mV>
	dm600mV();
  d6:	b1 df       	rcall	.-158    	; 0x3a <dm600mV>
	blink(2);
  d8:	82 e0       	ldi	r24, 0x02	; 2
  da:	ce df       	rcall	.-100    	; 0x78 <blink>
	LED_ON;
  dc:	c3 9a       	sbi	0x18, 3	; 24
  de:	2f eb       	ldi	r18, 0xBF	; 191
  e0:	84 ed       	ldi	r24, 0xD4	; 212
  e2:	91 e0       	ldi	r25, 0x01	; 1
  e4:	21 50       	subi	r18, 0x01	; 1
  e6:	80 40       	sbci	r24, 0x00	; 0
  e8:	90 40       	sbci	r25, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <set9V+0x10>
  ec:	00 c0       	rjmp	.+0      	; 0xee <set9V+0x1a>
  ee:	00 00       	nop
	_delay_ms(500);
	LED_OFF;
  f0:	c3 98       	cbi	0x18, 3	; 24
  f2:	08 95       	ret

000000f4 <set5V>:
}

void set5V() {
	dp600mV();
  f4:	9e df       	rcall	.-196    	; 0x32 <dp600mV>
	dm0mV();
  f6:	a5 df       	rcall	.-182    	; 0x42 <dm0mV>
	blink(1);
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	be df       	rcall	.-132    	; 0x78 <blink>
	LED_ON;
  fc:	c3 9a       	sbi	0x18, 3	; 24
  fe:	2f eb       	ldi	r18, 0xBF	; 191
 100:	84 ed       	ldi	r24, 0xD4	; 212
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <set5V+0x10>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <set5V+0x1a>
 10e:	00 00       	nop
	_delay_ms(500);
	LED_OFF;
 110:	c3 98       	cbi	0x18, 3	; 24
 112:	08 95       	ret

00000114 <main>:
uint8_t mode = 0;


int main(void)
{
	PORTB = BTN;
 114:	84 e0       	ldi	r24, 0x04	; 4
 116:	88 bb       	out	0x18, r24	; 24
	DDRB = BTN | LED | DP | DM_3V | DM_GND;
 118:	8f e1       	ldi	r24, 0x1F	; 31
 11a:	87 bb       	out	0x17, r24	; 23
	
	begin();
 11c:	95 df       	rcall	.-214    	; 0x48 <begin>
	set5V();
 11e:	ea df       	rcall	.-44     	; 0xf4 <set5V>
	
	while(1) {
		if (BTN_PUSHED) {
			while (BTN_PUSHED);
			mode = (mode + 1) % MODE_COUNT;
 120:	c3 e0       	ldi	r28, 0x03	; 3
 122:	d0 e0       	ldi	r29, 0x00	; 0
	
	begin();
	set5V();
	
	while(1) {
		if (BTN_PUSHED) {
 124:	b2 99       	sbic	0x16, 2	; 22
 126:	fe cf       	rjmp	.-4      	; 0x124 <main+0x10>
			while (BTN_PUSHED);
 128:	b2 9b       	sbis	0x16, 2	; 22
 12a:	fe cf       	rjmp	.-4      	; 0x128 <main+0x14>
			mode = (mode + 1) % MODE_COUNT;
 12c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	01 96       	adiw	r24, 0x01	; 1
 134:	be 01       	movw	r22, r28
 136:	10 d0       	rcall	.+32     	; 0x158 <__divmodhi4>
 138:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
			switch (mode) {
 13c:	81 30       	cpi	r24, 0x01	; 1
 13e:	31 f0       	breq	.+12     	; 0x14c <main+0x38>
 140:	18 f0       	brcs	.+6      	; 0x148 <main+0x34>
 142:	82 30       	cpi	r24, 0x02	; 2
 144:	29 f0       	breq	.+10     	; 0x150 <main+0x3c>
 146:	06 c0       	rjmp	.+12     	; 0x154 <main+0x40>
				case 0:
				set5V();
 148:	d5 df       	rcall	.-86     	; 0xf4 <set5V>
				break;
 14a:	ec cf       	rjmp	.-40     	; 0x124 <main+0x10>
				case 1:
				set9V();
 14c:	c3 df       	rcall	.-122    	; 0xd4 <set9V>
				break;
 14e:	ea cf       	rjmp	.-44     	; 0x124 <main+0x10>
				case 2:
				set12V();
 150:	b1 df       	rcall	.-158    	; 0xb4 <set12V>
				break;
 152:	e8 cf       	rjmp	.-48     	; 0x124 <main+0x10>
				default:
				set5V();
 154:	cf df       	rcall	.-98     	; 0xf4 <set5V>
				break;
 156:	e6 cf       	rjmp	.-52     	; 0x124 <main+0x10>

00000158 <__divmodhi4>:
 158:	97 fb       	bst	r25, 7
 15a:	07 2e       	mov	r0, r23
 15c:	16 f4       	brtc	.+4      	; 0x162 <__divmodhi4+0xa>
 15e:	00 94       	com	r0
 160:	06 d0       	rcall	.+12     	; 0x16e <__divmodhi4_neg1>
 162:	77 fd       	sbrc	r23, 7
 164:	08 d0       	rcall	.+16     	; 0x176 <__divmodhi4_neg2>
 166:	0b d0       	rcall	.+22     	; 0x17e <__udivmodhi4>
 168:	07 fc       	sbrc	r0, 7
 16a:	05 d0       	rcall	.+10     	; 0x176 <__divmodhi4_neg2>
 16c:	3e f4       	brtc	.+14     	; 0x17c <__divmodhi4_exit>

0000016e <__divmodhi4_neg1>:
 16e:	90 95       	com	r25
 170:	81 95       	neg	r24
 172:	9f 4f       	sbci	r25, 0xFF	; 255
 174:	08 95       	ret

00000176 <__divmodhi4_neg2>:
 176:	70 95       	com	r23
 178:	61 95       	neg	r22
 17a:	7f 4f       	sbci	r23, 0xFF	; 255

0000017c <__divmodhi4_exit>:
 17c:	08 95       	ret

0000017e <__udivmodhi4>:
 17e:	aa 1b       	sub	r26, r26
 180:	bb 1b       	sub	r27, r27
 182:	51 e1       	ldi	r21, 0x11	; 17
 184:	07 c0       	rjmp	.+14     	; 0x194 <__udivmodhi4_ep>

00000186 <__udivmodhi4_loop>:
 186:	aa 1f       	adc	r26, r26
 188:	bb 1f       	adc	r27, r27
 18a:	a6 17       	cp	r26, r22
 18c:	b7 07       	cpc	r27, r23
 18e:	10 f0       	brcs	.+4      	; 0x194 <__udivmodhi4_ep>
 190:	a6 1b       	sub	r26, r22
 192:	b7 0b       	sbc	r27, r23

00000194 <__udivmodhi4_ep>:
 194:	88 1f       	adc	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	5a 95       	dec	r21
 19a:	a9 f7       	brne	.-22     	; 0x186 <__udivmodhi4_loop>
 19c:	80 95       	com	r24
 19e:	90 95       	com	r25
 1a0:	bc 01       	movw	r22, r24
 1a2:	cd 01       	movw	r24, r26
 1a4:	08 95       	ret

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
